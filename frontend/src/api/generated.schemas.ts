/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
export interface BearerResponse {
  data: any;
  access_token: string;
  token_type: string;
}

export type BodyAuthJwtLoginAuthJwtLoginPostGrantType = string | null;

export type BodyAuthJwtLoginAuthJwtLoginPostClientId = string | null;

export type BodyAuthJwtLoginAuthJwtLoginPostClientSecret = string | null;

export interface BodyAuthJwtLoginAuthJwtLoginPost {
  grant_type?: BodyAuthJwtLoginAuthJwtLoginPostGrantType;
  username: string;
  password: string;
  scope?: string;
  client_id?: BodyAuthJwtLoginAuthJwtLoginPostClientId;
  client_secret?: BodyAuthJwtLoginAuthJwtLoginPostClientSecret;
}

export interface BodyResetForgotPasswordAuthForgotPasswordPost {
  email: string;
}

export interface BodyResetResetPasswordAuthResetPasswordPost {
  token: string;
  password: string;
}

export interface BodyVerifyRequestTokenAuthRequestVerifyTokenPost {
  email: string;
}

export interface BodyVerifyVerifyAuthVerifyPost {
  token: string;
}

export type ErrorModelDetailAnyOf = {[key: string]: string};

export type ErrorModelDetail = string | ErrorModelDetailAnyOf;

export interface ErrorModel {
  detail: ErrorModelDetail;
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export type UserCreateName = string | null;

export type UserCreateIsActive = boolean | null;

export type UserCreateIsSuperuser = boolean | null;

export type UserCreateIsVerified = boolean | null;

export interface UserCreate {
  email: string;
  password: string;
  name?: UserCreateName;
  is_active?: UserCreateIsActive;
  is_superuser?: UserCreateIsSuperuser;
  is_verified?: UserCreateIsVerified;
}

export type UserReadName = string | null;

export interface UserRead {
  id: string;
  email: string;
  name?: UserReadName;
  is_active?: boolean;
  is_superuser?: boolean;
  is_verified?: boolean;
}

export type UserUpdatePassword = string | null;

export type UserUpdateName = string | null;

export type UserUpdateEmail = string | null;

export type UserUpdateIsActive = boolean | null;

export type UserUpdateIsSuperuser = boolean | null;

export type UserUpdateIsVerified = boolean | null;

export interface UserUpdate {
  password?: UserUpdatePassword;
  name?: UserUpdateName;
  email?: UserUpdateEmail;
  is_active?: UserUpdateIsActive;
  is_superuser?: UserUpdateIsSuperuser;
  is_verified?: UserUpdateIsVerified;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

